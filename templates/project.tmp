<script src="js/dialog.js"></script>
<script src="js/project.js"></script>
<script src="js/inplace.js"></script>
<link rel="stylesheet" href="style/project.css">

<div hidden class="project big">
    <div class="title">
        <h1></h1>
        <span class="remixed-from"></span>
    </div>
    <div class="viewer pure-g">
        <!-- Project viewer -->
        <div class="embed pure-u-1-2">
            <!-- Spinner shown while embed hasn't been loaded -->
            <i class="project-loader fas fa-spinner fa-spin fa-3x"
                aria-hidden="true"></i>

            <!-- Project control bar -->
            <div class="controlbar">
                <i class="present-button fas fa-expand clickable"
                    onclick="toggleFullScreen();"></i>
                <i class="start-button fas fa-flag clickable"
                    onclick="runProject(event);"></i>
                <i class="pause-button fas fa-pause clickable"
                    onclick="togglePauseProject();"></i>
                <i class="stop-button fas fa-octagon clickable"
                    onclick="stopProject();"></i>
            </div>

            <!-- Project embed placeholder -->
            <i class="embed-placeholder"></i>

            <!-- Project Action Buttons -->
            <div class="buttons">
                <a localizable class="pure-button open"
                    target="_blank">See Code</a>
                <a localizable class="pure-button download"
                    target="_blank">Download</a>
                <a localizable class="pure-button embed-button"
                    target="_blank">Embed</a>
                <a localizable class="pure-button collect"
                    target="_blank">Add to Collection</a>
                <a localizable class="pure-button pure-button-warning delete"
                    target="_blank">Delete</a>
                <span class="flag-container">
                    <i class="warning fas fa-exclamation-triangle"></i>
                    <a localizable class="clickable warning flag"
                        target="_blank">Report this project</a>
                </span>
            </div>
        </div>
        <!-- just a separator -->
        <i class="pure-u-1-24"></i>
        <div class="details pure-u-11-24">
            <!-- Notes -->
            <pre class="notes"> </pre>
            <!-- Dates and project meta -->
            <div class="dates">
                <p class="created"><strong
                    localizable>Created:</strong><span></span></p>
                <p class="updated"><strong
                    localizable>Last updated:</strong><span></span></p>
                <p class="shared"><strong
                    localizable>Shared:</strong><span></span></p>
                <p class="published"><strong
                    localizable>Published:</strong><span></span></p>
                <a localizable class="pure-button share"
                    target="_blank">Share</a>
                <a localizable class="pure-button unshare"
                    target="_blank">Unshare</a>
                <a localizable class="pure-button publish"
                    target="_blank">Publish</a>
                <a localizable class="pure-button unpublish"
                    target="_blank">Unpublish</a>
            </div>
@include=flag_details
        </div>
    </div>

<!-- Carousel of remixes -->
@param widgetName=project_remixes
@include=project_remixes
<!-- Carousel of collections -->
@param widgetName=project_collections
@include=project_collections

</div>

<script>
    beganLoading('#wrapper');

    // Prevent scrolling when focus is in the iframe
    document.onscroll = function (event) {
        if (document.activeElement.tagName === 'IFRAME') {
            window.scrollTo(0, 0);
        }
    };

    SnapCloud.getProjectMetadata(
        pageProject(),
        pageUser(),
        function (project) {
            var datesDiv = document.querySelector('.dates'),
                buttonsDiv = document.querySelector('.buttons'),
                flagAnchor = buttonsDiv.querySelector('.flag');
            setTitle(pageProject() + localizer.localize(' by ') +
                pageUser() + ' - Snap! Build Your Own Blocks');

            // Fill up all fields
            fillProjectTitle(project, document.querySelector('.title'));
            loadProjectViewer(
                project,
                document.querySelector('.embed-placeholder')
            );
            fillProjectNotes(project, document.querySelector('.notes'));
            fillProjectDates(project, datesDiv);
            fillRemixInfo(project, document.querySelector('.remixed-from'));

            // Set up button visibility according to user permissions
            // and project visibility state
            setProjectControlButtonsVisibility(project, buttonsDiv);
            setProjectShareButtonsVisibility(project, datesDiv);

            if (owns(project)) {
                buttonsDiv.querySelector('.open').innerHTML =
                    localizer.localize('Edit');
            }

            // Set up button functionality
            buttonsDiv.querySelector('.open').href =
                projectURL(
                    project.username,
                    project.projectname,
                    getUrlParameter('devVersion') !== null) +
                '&editMode&noRun';
            buttonsDiv.querySelector('.download').onclick =
                function () { downloadProject(project); };
            buttonsDiv.querySelector('.embed-button').onclick =
                function () { embedDialog(project); }
            buttonsDiv.querySelector('.collect').onclick =
                function () { collectProject(project); }

            if (project.flagged) {
                flagAnchor.innerText = 'Unflag this project';
                document.querySelector('.flag-container').title =
                    localizer.localize(
                        'You flagged this project as inappropriate'
                    );
            }
            flagAnchor.onclick =
                function () {
                    if (project.flagged) {
                        confirmUnflagProject(project);
                    } else {
                        confirmFlagProject(project);
                    }
                };

            buttonsDiv.querySelector('.delete').onclick =
                function () { confirmDeleteProject(project); }

            datesDiv.querySelector('.share').onclick =
                function () {
                    confirmShareProject(project, buttonsDiv, datesDiv)
                };
            datesDiv.querySelector('.unshare').onclick =
                function () {
                    confirmUnshareProject(project, buttonsDiv, datesDiv);
                };
            datesDiv.querySelector('.publish').onclick =
                function () {
                    confirmPublishProject(project, buttonsDiv, datesDiv);
                };
            datesDiv.querySelector('.unpublish').onclick =
                function () {
                    confirmUnpublishProject(project, buttonsDiv, datesDiv);
                };

            doneLoading('#wrapper');
            document.querySelector('.project').hidden = false;
        },
        genericError
    );
</script>
