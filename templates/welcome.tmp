<script src="js/project.js"></script>
<link rel="stylesheet" href="style/project.css">

@include=slideshow

<h1><span localizable>Welcome to Snap</span><em>!</em><span hidden class="username"></h1>

<div class="indent bigger" localizable>
Snap<em>!</em> is a broadly inviting programming language for kids and adults that's also a platform for serious study of computer science.
</div>

<div class="indent v-spaced">
    <a href="/snap" class="pure-button" localizable>Run Snap<em>!</em> Now</a>
    <a href="/my_projects" hidden class="pure-button" localizable>My Projects</a>
    <a href="" hidden class="pure-button my-public-projects" localizable>My Public Page</a>
    <a href="/examples" class="pure-button" localizable>Example Projects</a>
    <a href="/snap/help/SnapManual.pdf" class="pure-button" localizable>Reference Manual</a>
</div>

<script>
let username = sessionStorage && sessionStorage.username;

if (username) {
    let heading = document.querySelector('h1 .username');
    let publicPage = document.querySelector('.indent a.my-public-projects');
    heading.hidden = false;
    heading.innerHTML = `, ${escapeHtml(username)}`;
    document.querySelector('a[href="/my_projects"]').hidden = false;
    publicPage.hidden = false;
    publicPage.href = `/user?user=${encodeURIComponent(username)}`;
}

</script>
<br class="v-spaced">
@param title='"Snap! Build Your Own Blocks"'

@param pageSize=5
@param withSearch=false
@param maxPages=0

@param widgetName=featured
@param header="'Featured Projects'"
@include=grid
<script>
    onLoadPage = function (response, targetElement) {
            response.projects.forEach(function (project) {
                targetElement.append(
                    newProjectDiv(
                        project,
                        {
                            size: 'small',
                            gridSize: 5,
                            extraFields: {
                                isPublic: 'ispublic',
                                isPublished: 'ispublished',
                                author: 'username'
                            }
                        }
                    )
                );
            });
        };

    featured_loadPage =
        function (query, pageSize, pageNumber, onSuccess) {
            SnapCloud.getCollectionProjects(
                'snapcloud',
                pageNumber,
                pageSize,
                'Featured',
                onSuccess,
                genericError,
                true // withThumbnail
            );
        };

    featured_onLoadPage = onLoadPage;
    featured_initGrid();
</script>

@param widgetName=snapcon
@param header="'Snap!Con 2021'"
@include=grid
<script>
    snapcon_loadPage =
        function (query, pageSize, pageNumber, onSuccess) {
            SnapCloud.getCollectionProjects(
                'snapcloud',
                pageNumber,
                pageSize,
                'Snap!Con 2021',
                onSuccess,
                genericError,
                true // withThumbnail
            );
        };

    snapcon_onLoadPage = onLoadPage;
    snapcon_initGrid();
</script>

@param widgetName=totm
@param header="'Topic of the Month, October: Fish'"
@include=grid
<script>
    totm_loadPage =
        function (query, pageSize, pageNumber, onSuccess) {
            SnapCloud.getCollectionProjects(
                'snapcloud',
                pageNumber,
                pageSize,
                'Fish',
                onSuccess,
                genericError,
                true // withThumbnail
            );
        };

    totm_onLoadPage = onLoadPage;
    totm_initGrid();
</script>

<script>
    // pick three random curated collections
    var collections =
        [ 'Science Projects',
            'Simulations',
            '3D',
            'Music',
            'Art Projects',
            'Fractals',
            'Animations',
            'Games' ];

    for (var i = collections.length - 1; i > 2; i --) {
        collections.splice(Math.floor(Math.random()*collections.length), 1);
    }
</script>

@param widgetName=curated1
@param header="collections[0]"
@include=grid
<script>
    curated1_loadPage =
        function (query, pageSize, pageNumber, onSuccess) {
            SnapCloud.getCollectionProjects(
                'snapcloud',
                pageNumber,
                pageSize,
                collections[0],
                onSuccess,
                genericError,
                true // withThumbnail
            );
        };

    curated1_onLoadPage = onLoadPage;
    curated1_initGrid();
</script>

@param widgetName=curated2
@param header="collections[1]"
@include=grid
<script>
    curated2_loadPage =
        function (query, pageSize, pageNumber, onSuccess) {
            SnapCloud.getCollectionProjects(
                'snapcloud',
                pageNumber,
                pageSize,
                collections[1],
                onSuccess,
                genericError,
                true // withThumbnail
            );
        };

    curated2_onLoadPage = onLoadPage;
    curated2_initGrid();
</script>

@param widgetName=curated3
@param header="collections[2]"
@include=grid
<script>
    curated3_loadPage =
        function (query, pageSize, pageNumber, onSuccess) {
            SnapCloud.getCollectionProjects(
                'snapcloud',
                pageNumber,
                pageSize,
                collections[2],
                onSuccess,
                genericError,
                true // withThumbnail
            );
        };

    curated3_onLoadPage = onLoadPage;
    curated3_initGrid();
</script>

@param header="'Latest Projects'"
@param widgetName=latest
@param maxPages=20
@include=grid
<script>
    latest_loadPage =
        function (query, pageSize, pageNumber, onSuccess) {
            SnapCloud.getPublishedProjectList(
                null, // no username
                pageNumber,
                pageSize,
                query,
                onSuccess,
                genericError,
                true // withThumbnail
            );
        };

    latest_onLoadPage = onLoadPage;

    latest_initGrid();
</script>

@param maxPages=0
@param header=''
